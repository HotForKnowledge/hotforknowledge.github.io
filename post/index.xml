<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hot For Knowledge</title>
    <link>https://hotforknowledge.com/post/</link>
    <description>Recent content in Posts on Hot For Knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Victor Baybekov</copyright>
    <lastBuildDate>Sun, 14 Jul 2019 16:12:00 +0300</lastBuildDate><atom:link href="https://hotforknowledge.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust as the new C. Part 1: building and combining native libs into C API</title>
      <link>https://hotforknowledge.com/2019/07/14/6-rust-the-new-c/</link>
      <pubDate>Sun, 14 Jul 2019 16:12:00 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2019/07/14/6-rust-the-new-c/</guid>
      <description>In this blog series, I will experiment with Rust as a safer and simpler C/C++ replacement. The idea is to combine a couple of C dependencies in Rust, to do some work using the dependencies in Rust and to expose a final API from a Rust library via C ABI. Then I will consume the same exported Rust methods from a number of modern languages/platforms such as C#, Python, Java, Nodejs, R, Go and even back from C/C++.</description>
    </item>
    
    <item>
      <title>Data Spreads: Write your Excel Macros In C#</title>
      <link>https://hotforknowledge.com/2016/10/31/5-data_spreads_excel_macros_in_csharp/</link>
      <pubDate>Mon, 31 Oct 2016 19:25:11 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2016/10/31/5-data_spreads_excel_macros_in_csharp/</guid>
      <description>A week ago, a friend of mine asked me if I could help him with parsing his old Excel files containing orders of Christmas trees. It was his seasonal business every end of a year for a long time, and old orders back to 2006 were kept in quite a free form so that I myself as a human had difficulties to grasp the structure of the worksheets. However, the goal was to export the data into a CRM system, to identify clients who made regular orders and to call them and try selling trees this year as well.</description>
    </item>
    
    <item>
      <title>Functional programming is a tool for thought, imperative programming is a tool for hacking</title>
      <link>https://hotforknowledge.com/2016/10/19/4-functional-for-thought-imperative-for-hacking/</link>
      <pubDate>Wed, 19 Oct 2016 10:50:09 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2016/10/19/4-functional-for-thought-imperative-for-hacking/</guid>
      <description>TL;DR; F# is great for algorithms and analytics. It could work for libraries, interop and high-performance code as well, but the experience is far from great and I do not want to fight with it anymore. At least I tried&amp;hellip;
I have been functional programming aficionado for a while. At some point, I took its advantages over mutable imperative code almost religiously. I fell in love with F#. Then I fell in love with mechanical sympathy, and F# - by being a multi-paradigm and .</description>
    </item>
    
    <item>
      <title>Migrating to Hugo Engine</title>
      <link>https://hotforknowledge.com/2016/10/15/3-hugo-website-engine/</link>
      <pubDate>Sat, 15 Oct 2016 15:00:12 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2016/10/15/3-hugo-website-engine/</guid>
      <description>I have migrated my WordPress blog to Hugo. Since I am not a web publishing expert, I have nothing to say other than the experience was very nice and flexibility is awesome. Markdown + VS Code + git rule them all!
I didn&amp;rsquo;t have enough patience to setup Jekyll with all its dependencies hell a while ago. WordPress was easy to install from WebMatrix and to run on IIS in AWS cloud, but I was afraid to touch anything because the entire setup looked fragile.</description>
    </item>
    
    <item>
      <title>How to write the simplest trading strategy using Spreads</title>
      <link>https://hotforknowledge.com/2015/12/29/2-how-to-write-the-simplest-trading-strategy-using-spreads/</link>
      <pubDate>Tue, 29 Dec 2015 17:51:27 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2015/12/29/2-how-to-write-the-simplest-trading-strategy-using-spreads/</guid>
      <description>I am always amused when retail traders are offered and then do use black boxes with complex frameworks to build automatic trading strategies. Usually, that goes with an explanation how cool those platforms are and how easy to build a strategy using them. They forget about vendor lock-in and the most terrible model of shared state with events hell like &amp;ldquo;OnData&amp;rdquo;, &amp;ldquo;OnOrder&amp;rdquo;, &amp;ldquo;OnBarOpen&amp;rdquo;, &amp;ldquo;OnBarClose&amp;rdquo;, etc. The more I talk with people, the more I realize that CEP is the approach that desks and serious traders use.</description>
    </item>
    
    <item>
      <title>Introducing Spreads library</title>
      <link>https://hotforknowledge.com/2015/12/20/1-introducing-spreads-library/</link>
      <pubDate>Sun, 20 Dec 2015 17:46:36 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2015/12/20/1-introducing-spreads-library/</guid>
      <description>TL;DR; This post is about background and thoughts on my number-crunching library Spreads, which stands for Series and Panels for Real-time and Exploratory Analysis of Data Streams. The library and its readme are on GitHub: https://github.com/Spreads/Spreads.
While I worked at Goldman Sachs as a research analyst, I got used to internal declarative time series processing language. It was so cool that I could build MSCI index rebalancing methodology with several lines of code.</description>
    </item>
    
    <item>
      <title>My “hacker” background</title>
      <link>https://hotforknowledge.com/2015/08/23/0-hacker-background/</link>
      <pubDate>Sun, 23 Aug 2015 17:41:56 +0300</pubDate>
      
      <guid>https://hotforknowledge.com/2015/08/23/0-hacker-background/</guid>
      <description>On my LinkedIn page, there are almost no endorsements for programming/tech, even though I program since age 12 or so. Probably this is an indication that the endorsement system is broken there or I am not very active there recently. Or this is a reflection of a mild problem I have - very few people from my former professional, mostly investment banking, network know that I can code well beyond VBA scripts.</description>
    </item>
    
  </channel>
</rss>
